from argparse import Parser
from argparse import ValueType
from fiber import Event
from net.tcp.server import Server
from .database import Database
from .statistics import Statistics
from .client_handler_fiber import ClientHandlerFiber

def main(argv: [string]):
    parser = Parser(version=__version__)
    parser.add_option("--port",
                      short="-p",
                      default="8000",
                      help="Port to listen for clients on (default: 8000).")
    parser.add_option("--database-directory",
                      short="-d",
                      default=".",
                      value_type=ValueType.DirPath,
                      help="Database directory (default: \".\").")
    parser.add_option("--ipinfo-token",
                      short="-i",
                      takes_value=True,
                      help="ipinfo.io token.")
    args = parser.parse(argv)

    database = Database(args.value_of("--database-directory"))
    statistics = Statistics(args.value_of("--ipinfo-token"))

    client_handlers: [ClientHandlerFiber] = []
    idle_client_handlers: [i64] = []
    idle_client_handlers_ready = Event()

    for i in range(20):
        client_handlers.append(ClientHandlerFiber(database,
                                                  statistics,
                                                  idle_client_handlers,
                                                  idle_client_handlers_ready,
                                                  i))
        client_handlers[-1].start()
        idle_client_handlers.append(i)

    server = Server()
    port = u32(args.value_of("--port"))
    server.listen(port)

    print(f"Listening for clients on port {port}.")

    while True:
        if len(idle_client_handlers) == 0:
            idle_client_handlers_ready.clear()
            idle_client_handlers_ready.wait()

        client = server.accept()
        client_handler = client_handlers[idle_client_handlers.pop()]
        client_handler.client = client
        client_handler.event.set()
