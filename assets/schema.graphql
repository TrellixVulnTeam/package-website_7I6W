type Query {
  standardLibrary: StandardLibrary!
  statistics: Statistics!
  activities: [Activity!]!
}

type StandardLibrary {
  package(name: String!): Package!
  packages: [Package!]
  numberOfPackages: Int
  numberOfDownloads: Int
}

type Package {
  name: String!
  latestRelease: Release!
  numberOfDownloads: Int!
  builds: Boolean
  coverage: Float
  linesOfCode: LinesOfCode
}

type LinesOfCode {
  languages: [LinesOfCodeLanguage!]!
  total: LinesOfCodeData!
}

type LinesOfCodeLanguage {
  name: String!
  data: LinesOfCodeData!
}

type LinesOfCodeData {
  files: Int!
  blank: Int!
  comment: Int!
  code: Int!
}

type Release {
  version: String!
  description: String!
}

type Statistics {
  startDateTime: String!
  totalNumberOfRequests: Int!
  numberOfUniqueVisitors: Int!
  numberOfGraphqlRequests: Int!
  noIdleClientHandlers: Int!
}

type Activity {
  date: String!
  kind: String!
  message: String!
}
